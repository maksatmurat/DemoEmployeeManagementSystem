@inject IJSRuntime JS

<div class="theme-switch">
    <label class="switch">
        <input type="checkbox" checked="@isDark" @onchange="ToggleTheme">
        <span class="slider"></span>
    </label>
</div>

@code {
    private bool isDark = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var theme = await JS.InvokeAsync<string>("ThemeManager.getCurrentTheme");
            isDark = theme == "dark";
            StateHasChanged();
        }
    }

    private async Task ToggleTheme(ChangeEventArgs e)
    {
        isDark = (bool)e.Value;
        await JS.InvokeVoidAsync("ThemeManager.toggleTheme", isDark);
    }
}

<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 24px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        background-color: #ccc;
        border-radius: 34px;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

</style>